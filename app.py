import sqlite3
import streamlit as st
from fpdf import FPDF
import re

# Fonction pour nettoyer les caract√®res sp√©ciaux, mais conserver les lettres accentu√©es
def remove_special_characters(text):
    # Remplacer tous les caract√®res non ASCII, sauf les lettres accentu√©es
    return re.sub(r'[^\x00-\x7F√©√®√™√¥√Æ√π√†√¢√ß√â√à√ä√î√é√ô√Ä√Ç√á]+', '', text)

# Connexion √† la base de donn√©es
conn = sqlite3.connect("articles.db")
cursor = conn.cursor()

# R√©cup√©rer les articles depuis la base
cursor.execute("SELECT id, title, source FROM articles")
articles = cursor.fetchall()

st.title("üì∞ Revue des Articles")
st.write("S√©lectionnez les articles √† inclure dans le PDF :")

if not articles:
    st.warning("Aucun article trouv√©.")
else:
    # Interface de s√©lection
    selected_ids = []
    for article in articles:
        id_, title, source = article
        if st.checkbox(f"{title} ({source})", key=id_):
            selected_ids.append(id_)

    # Bouton pour g√©n√©rer le PDF
    if st.button("üìÑ G√©n√©rer le PDF") and selected_ids:
        cursor.execute(
            f"SELECT title, url, publication_date, summary, source FROM articles WHERE id IN ({','.join(['?']*len(selected_ids))})",
            selected_ids
        )
        selected_articles = cursor.fetchall()

        # Cr√©ation du PDF
        pdf = FPDF()
        pdf.set_auto_page_break(auto=True, margin=15)

        # Page de garde
        pdf.add_page()
        pdf.set_font("Arial", 'B', 24)
        pdf.cell(200, 10, txt=remove_special_characters("üì∞ Revue des Articles S√©lectionn√©s"), ln=True, align="C")
        pdf.ln(10)
        
        # Si tu veux ajouter un logo, d√©commente la ligne suivante et mets le chemin de ton logo
        # pdf.image('logo.png', x=10, y=20, w=30)

        pdf.set_font("Arial", size=16)
        pdf.cell(200, 10, txt=remove_special_characters("S√©lectionnez vos articles pr√©f√©r√©s"), ln=True, align="C")
        pdf.ln(20)

        # Cr√©ation du contenu
        pdf.set_font("Arial", size=12)
        for title, url, publication_date, summary, source in selected_articles:
            # Nettoyer les titres et r√©sum√©s des caract√®res sp√©ciaux
            clean_title = remove_special_characters(title)
            clean_summary = remove_special_characters(summary)

            pdf.set_font("Arial", style='B', size=14)
            pdf.multi_cell(0, 10, clean_title)
            pdf.set_font("Arial", size=12)
            pdf.cell(0, 10, f"Date : {publication_date} | Source : {source}", ln=True)
            pdf.set_text_color(0, 0, 255)
            pdf.cell(0, 10, f"{url}", ln=True, link=url)
            pdf.set_text_color(0, 0, 0)
            pdf.multi_cell(0, 10, clean_summary)
            pdf.ln(10)

        # Sauvegarde et t√©l√©chargement
        pdf.output("selected_articles.pdf")
        
        # Message de succ√®s
        st.success("‚úÖ PDF g√©n√©r√© avec succ√®s ! Vous pouvez le t√©l√©charger ci-dessous.")

        # Bouton de t√©l√©chargement
        with open("selected_articles.pdf", "rb") as f:
            st.download_button("üì• T√©l√©charger le PDF", f, file_name="articles_selectionn√©s.pdf", mime="application/pdf")
